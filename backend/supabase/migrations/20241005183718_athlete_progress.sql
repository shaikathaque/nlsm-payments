create table "public"."athlete_progress" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "athlete_id" smallint,
    "comments" text,
    "scores" jsonb
);


alter table "public"."athlete_progress" enable row level security;

create table "public"."athletes" (
    "id" smallint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "first_name" character varying not null,
    "last_name" character varying not null,
    "dob" date not null,
    "branch" branch not null,
    "email" character varying,
    "phone" character varying
);


alter table "public"."athletes" enable row level security;

CREATE UNIQUE INDEX athlete_progress_pkey ON public.athlete_progress USING btree (id);

CREATE UNIQUE INDEX athletes_id_key ON public.athletes USING btree (id);

CREATE UNIQUE INDEX athletes_pkey ON public.athletes USING btree (id);

alter table "public"."athlete_progress" add constraint "athlete_progress_pkey" PRIMARY KEY using index "athlete_progress_pkey";

alter table "public"."athletes" add constraint "athletes_pkey" PRIMARY KEY using index "athletes_pkey";

alter table "public"."athlete_progress" add constraint "athlete_progress_athlete_id_fkey" FOREIGN KEY (athlete_id) REFERENCES athletes(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."athlete_progress" validate constraint "athlete_progress_athlete_id_fkey";

alter table "public"."athletes" add constraint "athletes_id_key" UNIQUE using index "athletes_id_key";

grant delete on table "public"."athlete_progress" to "anon";

grant insert on table "public"."athlete_progress" to "anon";

grant references on table "public"."athlete_progress" to "anon";

grant select on table "public"."athlete_progress" to "anon";

grant trigger on table "public"."athlete_progress" to "anon";

grant truncate on table "public"."athlete_progress" to "anon";

grant update on table "public"."athlete_progress" to "anon";

grant delete on table "public"."athlete_progress" to "authenticated";

grant insert on table "public"."athlete_progress" to "authenticated";

grant references on table "public"."athlete_progress" to "authenticated";

grant select on table "public"."athlete_progress" to "authenticated";

grant trigger on table "public"."athlete_progress" to "authenticated";

grant truncate on table "public"."athlete_progress" to "authenticated";

grant update on table "public"."athlete_progress" to "authenticated";

grant delete on table "public"."athlete_progress" to "service_role";

grant insert on table "public"."athlete_progress" to "service_role";

grant references on table "public"."athlete_progress" to "service_role";

grant select on table "public"."athlete_progress" to "service_role";

grant trigger on table "public"."athlete_progress" to "service_role";

grant truncate on table "public"."athlete_progress" to "service_role";

grant update on table "public"."athlete_progress" to "service_role";

grant delete on table "public"."athletes" to "anon";

grant insert on table "public"."athletes" to "anon";

grant references on table "public"."athletes" to "anon";

grant select on table "public"."athletes" to "anon";

grant trigger on table "public"."athletes" to "anon";

grant truncate on table "public"."athletes" to "anon";

grant update on table "public"."athletes" to "anon";

grant delete on table "public"."athletes" to "authenticated";

grant insert on table "public"."athletes" to "authenticated";

grant references on table "public"."athletes" to "authenticated";

grant select on table "public"."athletes" to "authenticated";

grant trigger on table "public"."athletes" to "authenticated";

grant truncate on table "public"."athletes" to "authenticated";

grant update on table "public"."athletes" to "authenticated";

grant delete on table "public"."athletes" to "service_role";

grant insert on table "public"."athletes" to "service_role";

grant references on table "public"."athletes" to "service_role";

grant select on table "public"."athletes" to "service_role";

grant trigger on table "public"."athletes" to "service_role";

grant truncate on table "public"."athletes" to "service_role";

grant update on table "public"."athletes" to "service_role";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.call_edge_function_from_trigger()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
    function_name TEXT;
    project_url TEXT;
    full_url TEXT;
BEGIN
    function_name := TG_ARGV[0];

    -- Fetch the project URL
    project_url := get_secret('project_url');

    -- Construct the full URL
    full_url := project_url || '/functions/v1/' || function_name;

    -- Call the http_request function with the constructed URL
    PERFORM net.http_post(
        url := full_url,
        headers := jsonb_build_object(
            'Content-Type', 'application/json',
            'Authorization', 'Bearer ' || get_secret('anon_key')
        ),
        body := jsonb_build_object(
            'type', TG_OP,
            'table', TG_TABLE_NAME,
            'schema', TG_TABLE_SCHEMA,
            'record', NEW,
            'old_record', OLD
        ),
        timeout_milliseconds := 5000
    );

    RETURN NULL;
END;
$function$
;

CREATE OR REPLACE FUNCTION public.get_secret(secret_name text)
 RETURNS text
 LANGUAGE plpgsql
 SECURITY DEFINER
 SET search_path TO ''
AS $function$ 
DECLARE 
   secret text;
BEGIN
   SELECT decrypted_secret INTO secret FROM vault.decrypted_secrets WHERE name = secret_name;
   RETURN secret;
END;
$function$
;

CREATE TRIGGER athlete_progress_report_email AFTER INSERT ON public.athlete_progress FOR EACH ROW EXECUTE FUNCTION call_edge_function_from_trigger('athlete-progress-report');